{
	"transfer_variable_path": "federatedml/transfer_variable_conf/transfer_conf.json",
	"runtime_conf_path": "federatedml/runtime_conf.json",
	"module": 
	{
	    "HomoLR":
	    {
	        "module_path":  "workflow/homo_lr_workflow",
	        "role":
	        {
	            "guest":
	            {
	                "program": "homo_guest_workflow.py",
	                "tasklist": ["train", "predict", "cross_validation"]
	            },
	            "host":
	            {
	                "program": "homo_host_workflow.py",
	                "tasklist": ["train", "predict", "cross_validation"]
	            },
	            "arbiter":
	            {
	                "program": "homo_arbiter_workflow.py",
	                "tasklist": ["train", "predict", "cross_validation"]
	            }
	        }
	    },
		"HeteroLR":
	    {
	        "module_path":  "workflow/hetero_lr_workflow",
	        "role":
	        {
	            "guest":
	            {
	                "program": "hetero_guest_workflow.py",
	                "tasklist": ["train", "predict", "cross_validation"]
	            },
	            "host":
	            {
	                "program": "hetero_host_workflow.py",
	                "tasklist": ["train", "predict", "cross_validation"]
	            },
	            "arbiter":
	            {
	                "program": "hetero_arbiter_workflow.py",
	                "tasklist": ["train", "cross_validation"]
	            }
	        }
	    },
	    "HeteroSecureBoostingTree":
	    {
	    	"module_path": "workflow/hetero_secureboosting_tree_workflow",
            "role":
            {
            	"guest":
            	{
            		"program": "hetero_secureboosting_tree_guest_workflow.py",
            		"tasklist": ["train", "predict", "cross_validation"]
            	},
            	"host":
            	{
            		"program": "hetero_secureboosting_tree_host_workflow.py",
            		"tasklist": ["train", "predict", "cross_validation"]
            	}
            }
	    },
		"HeteroFTL":
	    {
	    	"module_path": "workflow/hetero_ftl_workflow",
            "role":
            {
	            "guest":
	            {
	                "program": "hetero_guest_workflow.py",
	                "tasklist": ["train", "predict", "cross_validation"]
	            },
	            "host":
	            {
	                "program": "hetero_host_workflow.py",
	                "tasklist": ["train", "predict", "cross_validation"]
	            },
	            "arbiter":
	            {
	                "program": "hetero_arbiter_workflow.py",
	                "tasklist": ["train", "cross_validation"]
	            }
            }
	    },
		"Intersect":
	    {
	    	"module_path": "workflow/intersect_workflow",
            "role":
            {
            	"guest":
            	{
            		"program": "intersect_guest_workflow.py",
            		"tasklist": ["intersect"]
            	},
            	"host":
            	{
            		"program": "intersect_host_workflow.py",
            		"tasklist": ["intersect"]
            	}
            }
	    },
		"HeteroFeatureBinning":
		{
			"module_path": "workflow/hetero_binning_workflow",
			"role":
			{
				"guest":
				{
					"program": "hetero_binning_guest_workflow.py",
					"tasklist": ["binning"]
				},
				"host":
				{
					"program": "hetero_binning_host_workflow.py",
					"tasklist": ["binning"]
				}
			}
		},
		"HeteroFeatureSelection":
		{
			"module_path": "workflow/hetero_feature_selection_workflow",
			"role":
			{
				"guest":
				{
					"program": "hetero_feature_selection_guest_workflow.py",
					"tasklist": ["feature_select"]
				},
				"host":
				{
					"program": "hetero_feature_selection_host_workflow.py",
					"tasklist": ["feature_select"]
				}
			}
		},
        "ToyExample":
        {
            "module_path": "workflow/toy_example_workflow",
			"role":
			{
				"guest":
				{
					"program": "secure_add_guest_workflow.py",
					"tasklist": ["secure_add"]
				},
				"host":
				{
					"program": "secure_add_host_workflow.py",
					"tasklist": ["secure_add"]
				}
			}
        }
	}
}
